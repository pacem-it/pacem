@import "../../shared";
@import "../theme-dark";
@import "shared";

//.@{PCSS}-field {
//.@{PCSS}-input-container {
@{P}-checkbox {

    @_checkbox_size: 1.1rem * @font_rem_factor;

    .@{PCSS}-readonly.@{PCSS}-checkbox,
    label.@{PCSS}-label.@{PCSS}-checkbox {
        &::before {
            .Icon('check_box_outline_blank', @_checkbox_size);
            left: @input_padding_horiz;
            line-height: @field_height;
            color: @color_input_toggle;
        }

        &::before {
            color: @color_input_toggle;
        }
    }

    &.@{PCSS}-selected label.@{PCSS}-label.@{PCSS}-checkbox:before {
        content: 'check_box';
    }

    .@{PCSS}-readonly.@{PCSS}-checkbox {
        .FormFieldLabelIcon('check_box_outline');
    }

    &.@{PCSS}-selected .@{PCSS}-readonly.@{PCSS}-checkbox::before {
        content: 'check_box';
    }
}

// just the checkbox
@{P}-form-field.field-minimal @{P}-checkbox,
@{P}-checkbox.checkbox-naked {
    min-width: 0;
    height: @field_height;

    label.@{PCSS}-checkbox {
        border: 0;
        padding: 0;
        background: none;
        position: static;
        line-height: 1.5;
        min-width: 0;
        min-height: 0;
        vertical-align: middle;

        &::before {
            position: static;
            //line-height: 1;
        }
    }
}

// switcher
.SwitcherColoring(@back, @fore) {
    label.@{PCSS}-label.@{PCSS}-checkbox::before {
        color: @fore;
    }

    &.@{PCSS}-selected {
        label.@{PCSS}-label.@{PCSS}-checkbox {
            background: @back;
        }
    }

    &.@{PCSS}-selected when (@glows = true) {
        label.@{PCSS}-label.@{PCSS}-checkbox {
            box-shadow: 0 0 8px fade(@back, 100);
        }
    }
}

@{P}-form-field.@{PCSS}-switcher @{P}-checkbox,
@{P}-checkbox.checkbox-toggle,
@{P}-checkbox.checkbox-switch {
    // switcher

    @_pad: @grid_spacing / 6;
    @_h: @field_height - @_pad;

    label.@{PCSS}-label.@{PCSS}-checkbox {
        min-width: 0;
        min-height: 0;
        font-size: 0;
        height: @_h;
        border-radius: @_h/2;
        width: @_h * 2;
        margin-bottom: @_pad;
        // remove viewpathfinder border
        border-color: transparent !important;
        background: @color_disabled;
        padding: 0;
        transition: background linear .25s;

        &::before {
            .Icon('check', @_h);
            width: @_h;
            height: @_h;
            position: absolute;
            left: @_h;
            top: 0;
            opacity: 0;
            transition: transform @easing_in_out_sine .2s, opacity linear .1s;
        }

        @_brd: @border_field_size;
        @_switch_margin: 2px;

        &::after {
            @_c: @_h / 2;
            @_r: @_c - @_brd;
            content: '';
            position: absolute;
            left: @_brd;
            top: @_brd;
            height: @_h - 2* @_switch_margin;
            width: @_h - 2* @_switch_margin;
            transition: transform @easing_in_out_sine .2s;
            background-color: #fff;
            border-radius: 50%;
        }

        &::after when (@shadows = true) {
            box-shadow: 1px 1px @_brd rgba(0,0,0,1);
        }
    }

    label.@{PCSS}-label.@{PCSS}-checkbox when (@shadows = true) {
        box-shadow: inset 0 2px 2px rgba(0,0,0,0.3333);
    }

    &.@{PCSS}-selected {
        label.@{PCSS}-label.@{PCSS}-checkbox {

            &::before {
                opacity: 1;
                transform: translateX(-@_h) translateZ(0);
            }

            &::after {
                transform: translateX(@_h) translateZ(0);
            }
        }
    }

    .SwitcherColoring(@color_primary, @color_primary_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-primary @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-primary,
@{P}-checkbox.checkbox-switch.checkbox-primary {

    .SwitcherColoring(@color_primary, @color_primary_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-danger @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-danger,
@{P}-checkbox.checkbox-switch.checkbox-danger {
    .SwitcherColoring(@color_danger, @color_danger_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-warning @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-warning,
@{P}-checkbox.checkbox-switch.checkbox-warning {
    .SwitcherColoring(@color_warning, @color_warning_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-accent @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-accent,
@{P}-checkbox.checkbox-switch.checkbox-accent {
    .SwitcherColoring(@color_accent, @color_accent_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-success @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-success,
@{P}-checkbox.checkbox-switch.checkbox-success {
    .SwitcherColoring(@color_success, @color_success_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-default @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-default,
@{P}-checkbox.checkbox-switch.checkbox-default {
    .SwitcherColoring(@color_default, @color_default_inv);
}

@{P}-form-field.@{PCSS}-switcher.switcher-error @{P}-checkbox,
@{P}-checkbox.checkbox-toggle.checkbox-error,
@{P}-checkbox.checkbox-switch.checkbox-error {
    .SwitcherColoring(@color_error, @color_danger_inv);
}

@{P}-checkbox {
    // coloring
    .CheckboxColoring(@clr) {
        .CheckboxColoring(@clr, #fff);
    }

    .CheckboxColoring(@clr, @clr_inv) {
        .@{PCSS}-readonly.@{PCSS}-checkbox,
        label.@{PCSS}-label.@{PCSS}-checkbox {

            &::before {
                color: @clr;
            }
        }

        &.checkbox-toggle.@{PCSS}-selected {
            label.@{PCSS}-label.@{PCSS}-checkbox {
                background: @clr;

                &::before {
                    color: @clr_inv
                }
            }
        }

        &.checkbox-toggle.@{PCSS}-selected when (@glows = true) {
            label.@{PCSS}-label.@{PCSS}-checkbox {
                box-shadow: 0 0 8px @clr;
            }
        }
    }

    &.checkbox-default {
        .CheckboxColoring(@color_default);
    }

    &.checkbox-primary {
        .CheckboxColoring(@color_primary);
    }

    &.checkbox-warning {
        .CheckboxColoring(@color_warning);
    }

    &.checkbox-success {
        .CheckboxColoring(@color_success);
    }

    &.checkbox-danger {
        .CheckboxColoring(@color_danger);
    }

    &.checkbox-error {
        .CheckboxColoring(@color_error);
    }

    &.checkbox-accent {
        .CheckboxColoring(@color_accent);
    }

    &.@{PCSS}-disabled {
        .CheckboxColoring(@color_disabled);
    }
}
//}
//}
@media (min-width: @threshold_lg) {

    @{P}-form-field.field-minimal @{P}-checkbox,
    @{P}-checkbox.checkbox-naked,
    @{P}-checkbox.checkbox-toggle {
        min-width: 0;
    }
}

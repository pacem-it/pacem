@import "../layout/shared";
@import "../theme-dark.less";
@import "../../shared";

@lightbox_padding: 1em;

.ButtonShadows() {
    box-shadow: 0 2px @grid_spacing / 3 rgba(0,0,0,0.5);
}

.HorizontalItemSet(@type) {
    display: grid;
    grid-gap: 0;
    grid-template-columns: auto 1fr auto 1fr auto;
    grid-template-areas: 'left . center . right';
    align-items: start;
    white-space: nowrap;

    .@{PCSS}-@{type}set-left, .@{type}set-left,
    .@{PCSS}-@{type}set-center, .@{type}set-center,
    .@{PCSS}-@{type}set-right, .@{type}set-right {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
    }

    .@{PCSS}-@{type}set-left, .@{type}set-left {
        grid-area: left;
        align-content: flex-start;
    }

    .@{PCSS}-@{type}set-center, .@{type}set-center {
        grid-area: center;
        align-content: center;
    }

    .@{PCSS}-@{type}set-right, .@{type}set-right {
        grid-area: right;
        align-content: flex-end;
    }

    .@{PCSS}-@{type}set-auto, .@{type}set-auto {
        grid-column-start: 1;
        grid-column-end: 6;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;

        > * {
            flex: 1 0 auto;
        }
    }
}

.HorizontalItem(@type) {
    border-radius: 0;
    display: block;

    &.@{type}set-first when (@border_radius > 0) {
        border-top-left-radius: @border_radius;
        border-bottom-left-radius: @border_radius;
    }

    &:first-child when (@border_radius > 0) {
        border-top-left-radius: @border_radius;
        border-bottom-left-radius: @border_radius;
    }

    &.@{type}set-last when (@border_radius > 0) {
        border-top-right-radius: @border_radius;
        border-bottom-right-radius: @border_radius;
    }

    &:last-child when (@border_radius > 0) {
        border-top-right-radius: @border_radius;
        border-bottom-right-radius: @border_radius;
    }

    &:not(:last-child):not(.@{type}set-last) {
        border-right: none;
    }
}

/* #region TUNER */

.GradientTuner(@clr) {
    .GradientRadialContain(50%, 85%, 87%, 88%, 88%, 90%, 91%, 96%, 98%, 100%, fade(@clr, 0), fade(@clr, 20), fade(@clr, 50), fade(@clr, 0), fade(@clr, 0), fade(@clr, 10), fade(@clr, 10), fade(@clr, 0), fade(@clr, 25), fade(@clr, 0));
}

.Tuner(@size) {
    @_thickness: round(@size * 0.09256);
    @_outer_radius: @size;

    width: @_outer_radius;
    height: @_outer_radius;

    canvas.@{PCSS}-tuner {
        stroke-width: @_thickness;
    }

    .@{PCSS}-content {
        width: @_outer_radius;
        height: @_outer_radius;
        font-size: round(@size/3.2);
    }
}

/* #endregion */
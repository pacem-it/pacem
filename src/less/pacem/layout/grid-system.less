@import "shared";
@import "../../shared";
@import "../theme-dark";

/* #region FLEXBOX */

.Cells (@prefix, @count, @index) when (@index > 0 ) {

    &.@{prefix}-@{index} {
        flex-grow: 0;
        flex-basis: 100% * @index / @count;
    }
    // next iteration
    .Cells(@prefix, @count, @index - 1);
}

.CellsMid (@prefix, @mid, @count, @index) when (@index > 0 ) {

    &.@{prefix}-@{mid}-@{index} {
        flex-grow: 0;
        flex-basis: 100% * @index / @count;
    }
    // next iteration
    .CellsMid(@prefix, @mid, @count, @index - 1);
}

.Cells (@prefix, @count) {
    .Cells(@prefix, @count, @count);
}

.CellsMid (@prefix, @mid, @count) {
    .CellsMid(@prefix, @mid, @count, @count);
}

/* #endregion */

.@{PCSS}-flex,
.@{PCSS}-row {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    margin-left: -@grid_spacing/2;
    margin-right: -@grid_spacing/2;
    align-items: stretch;
}

.@{PCSS}-flex.flex-vertical {
    flex-direction: column;
}

.@{PCSS}-flex .@{PCSS}-flex,
.@{PCSS}-row .@{PCSS}-row {
    margin: 0;
}

.@{PCSS}-row .@{PCSS}-column,
.@{PCSS}-flex .@{PCSS}-box {
    flex-basis: auto;
    flex-shrink: 1;
    flex-grow: 1;
}

.@{PCSS}-row .@{PCSS}-column {
    .Cells(col, 12);
}

.@{PCSS}-flex .@{PCSS}-box {
    .Cells(box, 12);
}

@media (max-width: @threshold_sm - 1)  {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, xs, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, xs, 12);
    }
}

@media (min-width: @threshold_sm) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, sm, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, sm, 12);
    }
}

@media (min-width: @threshold_md) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, md, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, md, 12);
    }
}

@media (min-width: @threshold_lg) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, lg, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, lg, 12);
    }
}

@media (min-width: @threshold_xl) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, xl, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, xl, 12);
    }
}

@media (min-width: @threshold_hd) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, hd, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, hd, 12);
    }
}

@media (min-width: @threshold_uhd) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, uhd, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, uhd, 12);
    }
}

@media (min-width: @threshold_4k) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, 4k, 12);
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, 4k, 12);
    }
}

@media (orientation: portrait) {

    .@{PCSS}-row .@{PCSS}-column {
        .CellsMid(col, v, 12); // v := vertical
    }

    .@{PCSS}-flex .@{PCSS}-box {
        .CellsMid(box, v, 12); // v := vertical
    }
}

.@{PCSS}-flex {
    flex-wrap: wrap;

    &.flex-right {
        justify-content: flex-end;
    }

    &.flex-center {
        justify-content: center;
    }

    &.flex-top {
        align-items: flex-start;
    }

    &.flex-middle {
        align-items: center;
    }

    &.flex-bottom {
        align-items: flex-end;
    }
}

body.@{PCSS}-animations {
    .@{PCSS}-column.@{PCSS}-animatable,
    .@{PCSS}-box.@{PCSS}-animatable {
        transition: flex-basis .333s @easing_in_out_sine;
    }
}
